//
include "sun.asyhdr";

setView(-110, -25, -90);

real p = (sqrt(5) + 1) / 2;

transform3 rxy = reflect(O, X, Y);
transform3 rxz = reflect(O, X, Z);
transform3 ryz = reflect(O, Y, Z);
transform3 rxyz = rxy * rxz * ryz;
transform3 rs = rotate(120, X + Y + Z);

triple AA = unit(X + Y + (2 * p + 1) * Z);
triple AB = unit((p + 1) * X + (p + 2) * Z);
triple AC = unit(p * X + (p + 1) * Y + 2 * p * Z);

real q = dot(AC, X + Y + Z) / sqrt(3);

AA *= q;
AB *= q;
AC *= q;
triple AD = rxz * AA;
triple AE = ryz * AA;
triple AF = rxz * AE;
triple AG = ryz * AB;
triple AH = rxz * AC;
triple AI = ryz * AC;
triple AJ = rxz * AI;
triple AK = rs * AA;
triple AL = rs * AB;
triple AM = rs * AC;
triple AN = rs * AD;
triple AO = rs * AE;
triple AP = rs * AF;
triple AQ = rs * AG;
triple AR = rs * AH;
triple AS = rs * AI;
triple AT = rs * AJ;
triple BA = rs * AK;
triple BB = rs * AL;
triple BC = rs * AM;
triple BD = rs * AN;
triple BE = rs * AO;
triple BF = rs * AP;
triple BG = rs * AQ;
triple BH = rs * AR;
triple BI = rs * AS;
triple BJ = rs * AT;
triple BK = rxyz * AA;
triple BL = rxyz * AB;
triple BM = rxyz * AC;
triple BN = rxyz * AD;
triple BO = rxyz * AE;
triple BP = rxyz * AF;
triple BQ = rxyz * AG;
triple BR = rxyz * AH;
triple BS = rxyz * AI;
triple BT = rxyz * AJ;
triple CA = rxyz * AK;
triple CB = rxyz * AL;
triple CC = rxyz * AM;
triple CD = rxyz * AN;
triple CE = rxyz * AO;
triple CF = rxyz * AP;
triple CG = rxyz * AQ;
triple CH = rxyz * AR;
triple CI = rxyz * AS;
triple CJ = rxyz * AT;
triple CK = rxyz * BA;
triple CL = rxyz * BB;
triple CM = rxyz * BC;
triple CN = rxyz * BD;
triple CO = rxyz * BE;
triple CP = rxyz * BF;
triple CQ = rxyz * BG;
triple CR = rxyz * BH;
triple CS = rxyz * BI;
triple CT = rxyz * BJ;
triple DA = unit((p - 1) * X + p * Z);
triple DB = ryz * DA;
triple DC = rxy * DA;
triple DD = ryz * DC;
triple DE = rs * DA;
triple DF = rs * DB;
triple DG = rs * DC;
triple DH = rs * DD;
triple DI = rs * DE;
triple DJ = rs * DF;
triple DK = rs * DG;
triple DL = rs * DH;
triple DM = unit(X + Y + Z);
triple DN = rxy * DM;
triple DO = rxz * DM;
triple DP = rxy * DO;
triple DQ = ryz * DM;
triple DR = ryz * DN;
triple DS = ryz * DO;
triple DT = ryz * DP;

triple EA = Y + p * Z;
transform3 j = rotate(36, EA);
AA = j * AA;
AC = j * AC;
BB = j * BB;
AI = j * AI;
AE = j * AE;
DA = j * DA;
DB = j * DB;
DI = j * DI;
DM = j * DM;
DQ = j * DQ;

transform3 t = rotate(-20, BH);

bool[] conf = new bool[] {true, false, true, true, false, true, true, true, false, true, true, false};
bool[] confj1 = new bool[] {true, false, true, true, true, false, true, true, false, true, true, false};
bool[] confj2 = new bool[] {true, false, true, true, false, true, true, false, true, true, true, false};

face faa = constructFace(AA, DA, conf);
face fab = constructFace(AB, DA, confj2);
face fac = constructFace(AC, DM, conf);
face fad = constructFace(AD, DB, confj1);
face fae = constructFace(AE, DB, conf);
face faf = constructFace(AF, DB, confj2);
face fag = constructFace(AG, DQ, confj1);
face fah = constructFace(AH, DO, conf);
face fai = constructFace(AI, DQ, conf);
face faj = constructFace(AJ, DS, conf);
face fak = constructFace(AK, DE, conf);
face fal = constructFace(AL, DE, conf);
face fam = constructFace(AM, DA, confj1);
face fan = constructFace(AN, DE, conf);
face fao = constructFace(AO, DF, conf);
face fap = constructFace(AP, DF, conf);
face faq = constructFace(AQ, DF, conf);
face far = constructFace(AR, DN, conf);
face fas = constructFace(AS, DO, conf);
face fat = constructFace(AT, DP, conf);
face fba = constructFace(BA, DM, confj1);
face fbb = constructFace(BB, DI, conf);
face fbc = constructFace(BC, DM, confj2);
face fbd = constructFace(BD, DI, confj2);
face fbe = constructFace(BE, DJ, conf);
face fbf = constructFace(BF, DJ, conf);
face fbg = constructFace(BG, DJ, conf);
face fbh = constructFace(BH, DI, confj1);
face fbi = constructFace(BI, DN, conf);
face fbj = constructFace(BJ, DR, conf);
face fbk = constructFace(BK, DD, conf);
face fbl = constructFace(BL, DD, conf);
face fbm = constructFace(BM, DT, conf);
face fbn = constructFace(BN, DD, conf);
face fbo = constructFace(BO, DC, conf);
face fbp = constructFace(BP, DC, conf);
face fbq = constructFace(BQ, DC, conf);
face fbr = constructFace(BR, DR, conf);
face fbs = constructFace(BS, DP, conf);
face fbt = constructFace(BT, DN, conf);
face fca = constructFace(CA, DH, conf);
face fcb = constructFace(CB, DH, conf);
face fcc = constructFace(CC, DT, conf);
face fcd = constructFace(CD, DH, conf);
face fce = constructFace(CE, DG, conf);
face fcf = constructFace(CF, DG, conf);
face fcg = constructFace(CG, DG, conf);
face fch = constructFace(CH, DS, conf);
face fci = constructFace(CI, DR, conf);
face fcj = constructFace(CJ, DQ, confj2);
face fck = constructFace(CK, DL, conf);
face fcl = constructFace(CL, DL, conf);
face fcm = constructFace(CM, DT, conf);
face fcn = constructFace(CN, DL, conf);
face fco = constructFace(CO, DK, conf);
face fcp = constructFace(CP, DK, conf);
face fcq = constructFace(CQ, DK, conf);
face fcr = constructFace(CR, DP, conf);
face fcs = constructFace(CS, DS, conf);
face fct = constructFace(CT, DO, conf);

real d = length(faa.P[0] - faa.R[0]) * 2 / 3;
glueFaces(faa, fab, fam, d);
glueFaces(fae, faf, fad, d);
glueFaces(fak, fal, fan, d);
glueFaces(fao, fap, faq, d);
glueFaces(fac, fba, fbc, d);
glueFaces(fbb, fbd, fbh, d);
glueFaces(fbe, fbf, fbg, d);
glueFaces(fbk, fbl, fbn, d);
glueFaces(fbo, fbp, fbq, d);
glueFaces(far, fbi, fbt, d);
glueFaces(fca, fcb, fcd, d);
glueFaces(fce, fcf, fcg, d);
glueFaces(fbj, fbr, fci, d);
glueFaces(fag, fai, fcj, d);
glueFaces(fbm, fcc, fcm, d);
glueFaces(fck, fcl, fcn, d);
glueFaces(fco, fcp, fcq, d);
glueFaces(fat, fbs, fcr, d);
glueFaces(faj, fch, fcs, d);
glueFaces(fah, fas, fct, d);
glueFaces(fab, fas, d);
glueFaces(fas, fao, d);
glueFaces(fao, fak, d);
glueFaces(fak, fam, d);
glueFaces(fam, fbc, d);
glueFaces(faa, fac, d);
glueFaces(fac, fbb, d);
glueFaces(fbb, fai, d);
glueFaces(fai, fae, d);
glueFaces(fae, faa, d);
glueFaces(fba, fbd, d);
glueFaces(fbc, fal, d);
glueFaces(fal, fbi, d);
glueFaces(fbi, fbe, d);
glueFaces(fbe, fba, d);
glueFaces(fan, fap, d);
glueFaces(fap, fat, d);
glueFaces(fat, fbq, d);
glueFaces(fbq, far, d);
glueFaces(far, fan, d);
glueFaces(fbg, fbt, d);
glueFaces(fbt, fbp, d);
glueFaces(fbp, fbn, d);
glueFaces(fbn, fbr, d);
glueFaces(fbr, fbg, d);
glueFaces(fbd, fbf, d);
glueFaces(fbf, fbj, d);
glueFaces(fbj, fcg, d);
glueFaces(fcg, fbh, d);
glueFaces(fbh, fcj, d);
glueFaces(fbl, fcc, d);
glueFaces(fcc, fca, d);
glueFaces(fca, fce, d);
glueFaces(fce, fci, d);
glueFaces(fci, fbl, d);
glueFaces(faf, fag, d);
glueFaces(fcj, fcf, d);
glueFaces(fcf, fcd, d);
glueFaces(fcd, fch, d);
glueFaces(fch, fag, d);
glueFaces(fbk, fbo, d);
glueFaces(fbo, fbs, d);
glueFaces(fbs, fcl, d);
glueFaces(fcl, fbm, d);
glueFaces(fbm, fbk, d);
glueFaces(fab, fad, d);
glueFaces(faf, faj, d);
glueFaces(faj, fcq, d);
glueFaces(fcq, fah, d);
glueFaces(fah, fad, d);
glueFaces(fcb, fcm, d);
glueFaces(fcm, fck, d);
glueFaces(fck, fco, d);
glueFaces(fco, fcs, d);
glueFaces(fcs, fcb, d);
glueFaces(faq, fct, d);
glueFaces(fct, fcp, d);
glueFaces(fcp, fcn, d);
glueFaces(fcn, fcr, d);
glueFaces(fcr, faq, d);

vertex5 vblue = constructVertex5(fab, fas, fao, fak, fam);
vertex5 vwhite = constructVertex5(faa, fac, fbb, fai, fae);
vertex5 vyellow = constructVertex5(fba, fbc, fal, fbi, fbe);
vertex5 vlightgreen = constructVertex5(fan, fap, fat, fbq, far);
vertex5 vorange = constructVertex5(fbg, fbt, fbp, fbn, fbr);
vertex5 vviolet = constructVertex5(fbd, fbf, fbj, fcg, fbh);
vertex5 vlightblue = constructVertex5(fbl, fcc, fca, fce, fci);
vertex5 vgreen = constructVertex5(fag, fcj, fcf, fcd, fch);
vertex5 vgrey = constructVertex5(fbk, fbo, fbs, fcl, fbm);
vertex5 vred = constructVertex5(fad, faf, faj, fcq, fah);
vertex5 vlime = constructVertex5(fcb, fcm, fck, fco, fcs);
vertex5 vpink = constructVertex5(faq, fct, fcp, fcn, fcr);

vertex4 vbluewhite = constructVertex4(faa, fam, fbc, fac);
vertex4 vwhiteyellow = constructVertex4(fac, fba, fbd, fbb);
vertex4 vblueyellow = constructVertex4(fak, fal, fbc, fam);
vertex4 vbluelightgreen = constructVertex4(fak, fao, fap, fan);
vertex4 vyellowlightgreen = constructVertex4(fal, fan, far, fbi);
vertex4 vyelloworange = constructVertex4(fbe, fbi, fbt, fbg);
vertex4 vlightgreenorange = constructVertex4(far, fbq, fbp, fbt);
vertex4 vyellowviolet = constructVertex4(fba, fbe, fbf, fbd);
vertex4 vorangeviolet = constructVertex4(fbf, fbg, fbr, fbj);
vertex4 vvioletlightblue = constructVertex4(fbj, fci, fce, fcg);
vertex4 vorangelightblue = constructVertex4(fbl, fci, fbr, fbn);
vertex4 vwhiteviolet = constructVertex4(fai, fbb, fbh, fcj);
vertex4 vwhitegreen = constructVertex4(fae, fai, fag, faf);
vertex4 vvioletgreen = constructVertex4(fbh, fcg, fcf, fcj);
vertex4 vlightbluegreen = constructVertex4(fca, fcd, fcf, fce);
vertex4 vorangegrey = constructVertex4(fbk, fbn, fbp, fbo);
vertex4 vlightbluegrey = constructVertex4(fbk, fbm, fcc, fbl);
vertex4 vwhitered = constructVertex4(faa, fae, fad, fab);
vertex4 vgreenred = constructVertex4(faf, fag, fch, faj);
vertex4 vbluered = constructVertex4(fab, fad, fah, fas);
vertex4 vlightgreengrey = constructVertex4(fat, fbs, fbo, fbq);
vertex4 vlightbluelime = constructVertex4(fca, fcc, fcm, fcb);
vertex4 vgreylime = constructVertex4(fbm, fcl, fck, fcm);
vertex4 vredlime = constructVertex4(faj, fcs, fco, fcq);
vertex4 vgreenlime = constructVertex4(fcb, fcs, fch, fcd);
vertex4 vbluepink = constructVertex4(fao, fas, fct, faq);
vertex4 vredpink = constructVertex4(fah, fcq, fcp, fct);
vertex4 vlimepink = constructVertex4(fck, fcn, fcp, fco);
vertex4 vgreypink = constructVertex4(fbs, fcr, fcn, fcl);
vertex4 vlightgreenpink = constructVertex4(fap, faq, fcr, fat);

drawFace(faa, White + Platina);
drawFace(fac, White + Lilac);
drawFace(fbb, White + Brown, t, 1);
drawFace(fai, White + Ametist);
drawFace(fae, White + Garnet);
drawFace(fad, Red + Platina);
drawFace(faf, Red + Lilac);
drawFace(faj, Red + Brown);
drawFace(fcq, Red + Ametist);
drawFace(fah, Red + Garnet);
drawFace(fab, Blue + Platina);
drawFace(fas, Blue + Lilac);
drawFace(fao, Blue + Brown);
drawFace(fak, Blue + Ametist);
drawFace(fam, Blue + Garnet);
drawFace(fal, Yellow + Platina);
drawFace(fbi, Yellow + Lilac);
drawFace(fbe, Yellow + Brown);
drawFace(fba, Yellow + Ametist);
drawFace(fbc, Yellow + Garnet);
drawFace(fbd, Violet + Platina, t, 11);
drawFace(fbf, Violet + Lilac);
drawFace(fbj, Violet + Brown);
drawFace(fcg, Violet + Ametist, t, 4);
drawFace(fbh, Violet + Garnet, t);
drawFace(fag, Green + Platina);
drawFace(fcj, Green + Lilac, t, 4);
drawFace(fcf, Green + Brown);
drawFace(fcd, Green + Ametist);
drawFace(fch, Green + Garnet);
drawFace(fan, LightGreen + Platina);
drawFace(fap, LightGreen + Lilac);
drawFace(fat, LightGreen + Brown);
drawFace(fbq, LightGreen + Ametist);
drawFace(far, LightGreen + Garnet);
drawFace(faq, Pink + Platina);
drawFace(fct, Pink + Lilac);
drawFace(fcp, Pink + Brown);
drawFace(fcn, Pink + Ametist);
drawFace(fcr, Pink + Garnet);
drawFace(fbg, Orange + Platina);
drawFace(fbt, Orange + Lilac);
drawFace(fbp, Orange + Brown);
drawFace(fbn, Orange + Ametist);
drawFace(fbr, Orange + Garnet);
drawFace(fbk, Grey + Platina);
drawFace(fbo, Grey + Lilac);
drawFace(fbs, Grey + Brown);
drawFace(fcl, Grey + Ametist);
drawFace(fbm, Grey + Garnet);
drawFace(fbl, LightBlue + Platina);
drawFace(fca, LightBlue + Lilac);
drawFace(fcc, LightBlue + Brown);
drawFace(fce, LightBlue + Ametist);
drawFace(fci, LightBlue + Garnet);
drawFace(fcb, Lime + Platina);
drawFace(fck, Lime + Lilac);
drawFace(fcm, Lime + Brown);
drawFace(fco, Lime + Ametist);
drawFace(fcs, Lime + Garnet);

drawVertex5(vblue, Tan);
drawVertex5(vwhite, Tan);
drawVertex5(vyellow, Tan);
drawVertex5(vlightgreen, Tan);
drawVertex5(vorange, Tan);
drawVertex5(vviolet, Tan, t, 4);
drawVertex5(vlightblue, Tan);
drawVertex5(vgreen, Tan);
drawVertex5(vgrey, Tan);
drawVertex5(vred, Tan);
drawVertex5(vlime, Tan);
drawVertex5(vpink, Tan);

drawVertex4(vbluewhite, LightBlue + Grey);
drawVertex4(vwhiteyellow, Grey + Lime);
drawVertex4(vblueyellow, LightBlue + Lime);
drawVertex4(vbluelightgreen, LightBlue + Green);
drawVertex4(vyellowlightgreen, Lime + Green);
drawVertex4(vyelloworange, Lime + Red);
drawVertex4(vlightgreenorange, Green + Red);
drawVertex4(vyellowviolet, Lime + Pink);
drawVertex4(vorangeviolet, Red + Pink);
drawVertex4(vvioletlightblue, Pink + Blue);
drawVertex4(vorangelightblue, Red + Blue);
drawVertex4(vwhiteviolet, Grey + Pink, t, 2);
drawVertex4(vwhitegreen, Grey + LightGreen);
drawVertex4(vvioletgreen, Pink + LightGreen, t, 0);
drawVertex4(vlightbluegreen, Blue + LightGreen);
drawVertex4(vorangegrey, Red + White);
drawVertex4(vlightbluegrey, Blue + White);
drawVertex4(vwhitered, Grey + Orange);
drawVertex4(vgreenred, Green + Orange);
drawVertex4(vbluered, LightBlue + Orange);
drawVertex4(vlightgreengrey, Green + White);
drawVertex4(vlightbluelime, Blue + Yellow);
drawVertex4(vgreylime, White + Yellow);
drawVertex4(vredlime, Orange + Yellow);
drawVertex4(vgreenlime, LightGreen + Yellow);
drawVertex4(vbluepink, LightBlue + Violet);
drawVertex4(vredpink, Orange + Violet);
drawVertex4(vlimepink, Yellow + Violet);
drawVertex4(vgreypink, White + Violet);
drawVertex4(vlightgreenpink, Green + Violet);

