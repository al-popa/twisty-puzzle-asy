triple
AA, AB, AC, AD, AE, AF, AG, AH, AI, AJ, AK, AL, AM, AN, AO, AP, AQ, AR, AS, AT,
BAB, BAM, BAN, BBA, BBO, BBP, BCD, BCQ, BCR, BDC, BDS, BDT, BEF, BEM, BEQ,
BFE, BFN, BFR, BGH, BGO, BGS, BHG, BHP, BHT, BIJ, BIM, BIO, BJI, BJQ, BJS,
BKL, BKN, BKP, BLK, BLR, BLT, BMA, BME, BMI, BNA, BNF, BNK, BOB, BOG, BOI,
BPB, BPH, BPK, BQC, BQJ, BQE, BRC, BRF, BRL, BSD, BSG, BSJ, BTD, BTH, BTL,
BA2B, BA2M, BA2N, BB2O, BB2P, BC2D, BC2Q, BC2R, BD2S, BD2T,
BE2F, BE2M, BE2Q, BF2N, BF2R, BG2H, BG2O, BG2S, BH2P, BH2T,
BI2J, BI2M, BI2O, BJ2Q, BJ2S, BK2L, BK2N, BK2P, BL2R, BL2T,
CA, CB, CI, CM, CO, CAB, CAM, CBO, CIM, CIO, CZA, CZB, CZI, CZM, CZO,
DA, DB, DK, DN, DP, DAB, DAN, DBP, DKN, DKP, DZA, DZB, DZK, DZN, DZP,
EA, EE, EF, EM, EN, EAM, EAN, EEF, EEM, EFN, EZA, EZE, EZF, EZM, EZN,
FB, FG, FH, FO, FP, FBO, FBP, FGH, FGO, FHP, FZB, FZG, FZH, FZO, FZP,
GC, GD, GL, GR, GT, GZ, GCD, GCR, GDT, GLR, GLT, GZC, GZD, GZL, GZR, GZT,
HC, HD, HJ, HQ, HS, HCD, HCQ, HDS, HJQ, HJS, HZC, HZD, HZJ, HZQ, HZS,
IC, IE, IF, IQ, IR, ICQ, ICR, IEF, IEQ, IFR, IZC, IZE, IZF, IZQ, IZR,
JD, JG, JH, JS, JT, JDS, JDT, JGH, JGS, JHT, JZD, JZG, JZH, JZS, JZT,
KE, KI, KJ, KM, KQ, KEM, KEQ, KIJ, KIM, KJQ, KZE, KZI, KZJ, KZM, KZQ,
LF, LK, LL, LN, LR, LFN, LFR, LKL, LKN, LLR, LZF, LZK, LZL, LZN, LZR,
MG, MI, MJ, MO, MS, MGO, MGS, MIJ, MIO, MJS, MZG, MZI, MZJ, MZO, MZS,
NH, NK, NL, NP, NT, NHP, NHT, NKL, NKP, NLT, NZH, NZK, NZL, NZP, NZT;

void init()
{
	real u = (sqrt(5)+1)/2;
	real v = u-1;
	real p = 1/2;
	real q = (29-sqrt(5))/38;
	real r = 0.5;
	real s = sqrt(3);

	AA = (u*X+v*Y)/s;
	AB = (u*X-v*Y)/s;
	AC = (-u*X+v*Y)/s;
	AD = (-u*X-v*Y)/s;
	AE = (u*Y+v*Z)/s;
	AF = (u*Y-v*Z)/s;
	AG = (-u*Y+v*Z)/s;
	AH = (-u*Y-v*Z)/s;
	AI = (v*X+u*Z)/s;
	AJ = (-v*X+u*Z)/s;
	AK = (v*X-u*Z)/s;
	AL = (-v*X-u*Z)/s;
	AM = (X+Y+Z)/s;
	AN = (X+Y-Z)/s;
	AO = (X-Y+Z)/s;
	AP = (X-Y-Z)/s;
	AQ = (-X+Y+Z)/s;
	AR = (-X+Y-Z)/s;
	AS = (-X-Y+Z)/s;
	AT = (-X-Y-Z)/s;

	BAB = q*AA+(1-q)*AB;
	BAM = q*AA+(1-q)*AM;
	BAN = q*AA+(1-q)*AN;
	BBA = q*AB+(1-q)*AA;
	BBO = q*AB+(1-q)*AO;
	BBP = q*AB+(1-q)*AP;
	BCD = q*AC+(1-q)*AD;
	BCQ = q*AC+(1-q)*AQ;
	BCR = q*AC+(1-q)*AR;
	BDC = q*AD+(1-q)*AC;
	BDS = q*AD+(1-q)*AS;
	BDT = q*AD+(1-q)*AT;
	BEF = q*AE+(1-q)*AF;
	BEM = q*AE+(1-q)*AM;
	BEQ = q*AE+(1-q)*AQ;
	BFE = q*AF+(1-q)*AE;
	BFN = q*AF+(1-q)*AN;
	BFR = q*AF+(1-q)*AR;
	BGH = q*AG+(1-q)*AH;
	BGO = q*AG+(1-q)*AO;
	BGS = q*AG+(1-q)*AS;
	BHG = q*AH+(1-q)*AG;
	BHP = q*AH+(1-q)*AP;
	BHT = q*AH+(1-q)*AT;
	BIJ = q*AI+(1-q)*AJ;
	BIM = q*AI+(1-q)*AM;
	BIO = q*AI+(1-q)*AO;
	BJI = q*AJ+(1-q)*AI;
	BJQ = q*AJ+(1-q)*AQ;
	BJS = q*AJ+(1-q)*AS;
	BKL = q*AK+(1-q)*AL;
	BKN = q*AK+(1-q)*AN;
	BKP = q*AK+(1-q)*AP;
	BLK = q*AL+(1-q)*AK;
	BLR = q*AL+(1-q)*AR;
	BLT = q*AL+(1-q)*AT;
	BMA = q*AM+(1-q)*AA;
	BME = q*AM+(1-q)*AE;
	BMI = q*AM+(1-q)*AI;
	BNA = q*AN+(1-q)*AA;
	BNF = q*AN+(1-q)*AF;
	BNK = q*AN+(1-q)*AK;
	BOB = q*AO+(1-q)*AB;
	BOG = q*AO+(1-q)*AG;
	BOI = q*AO+(1-q)*AI;
	BPB = q*AP+(1-q)*AB;
	BPH = q*AP+(1-q)*AH;
	BPK = q*AP+(1-q)*AK;
	BQC = q*AQ+(1-q)*AC;
	BQJ = q*AQ+(1-q)*AJ;
	BQE = q*AQ+(1-q)*AE;
	BRC = q*AR+(1-q)*AC;
	BRF = q*AR+(1-q)*AF;
	BRL = q*AR+(1-q)*AL;
	BSD = q*AS+(1-q)*AD;
	BSG = q*AS+(1-q)*AG;
	BSJ = q*AS+(1-q)*AJ;
	BTD = q*AT+(1-q)*AD;
	BTH = q*AT+(1-q)*AH;
	BTL = q*AT+(1-q)*AL;
	BA2B = (AA+AB)/2;
	BA2M = (AA+AM)/2;
	BA2N = (AA+AN)/2;
	BB2O = (AB+AO)/2;
	BB2P = (AB+AP)/2;
	BC2D = (AC+AD)/2;
	BC2Q = (AC+AQ)/2;
	BC2R = (AC+AR)/2;
	BD2S = (AD+AS)/2;
	BD2T = (AD+AT)/2;
	BE2F = (AE+AF)/2;
	BE2M = (AE+AM)/2;
	BE2Q = (AE+AQ)/2;
	BF2N = (AF+AN)/2;
	BF2R = (AF+AR)/2;
	BG2H = (AG+AH)/2;
	BG2O = (AG+AO)/2;
	BG2S = (AG+AS)/2;
	BH2P = (AH+AP)/2;
	BH2T = (AH+AT)/2;
	BI2J = (AI+AJ)/2;
	BI2M = (AI+AM)/2;
	BI2O = (AI+AO)/2;
	BJ2Q = (AJ+AQ)/2;
	BJ2S = (AJ+AS)/2;
	BK2L = (AK+AL)/2;
	BK2N = (AK+AN)/2;
	BK2P = (AK+AP)/2;
	BL2R = (AL+AR)/2;
	BL2T = (AL+AT)/2;

	CA = BAB+BAM-AA;
	CB = BBA+BBO-AB;
	CI = BIM+BIO-AI;
	CM = BMA+BMI-AM;
	CO = BOB+BOI-AO;
	CAB = (BAM+BBO)/2;
	CAM = (BAB+BMI)/2;
	CBO = (BBA+BOI)/2;
	CIM = (BIO+BMA)/2;
	CIO = (BIM+BOB)/2;
	CZA = r*AA+(1-r)*BI2O;
	CZB = r*AB+(1-r)*BI2M;
	CZI = r*AI+(1-r)*BA2B;
	CZM = r*AM+(1-r)*BB2O;
	CZO = r*AO+(1-r)*BA2M;

	DA = BAB+BAN-AA;
	DB = BBA+BBP-AB;
	DK = BKN+BKP-AK;
	DN = BNA+BNK-AN;
	DP = BPB+BPK-AP;
	DAB = (BAN+BBP)/2;
	DAN = (BAB+BNK)/2;
	DBP = (BBA+BPK)/2;
	DKN = (BKP+BNA)/2;
	DKP = (BKN+BPB)/2;
	DZA = r*AA+(1-r)*BK2P;
	DZB = r*AB+(1-r)*BK2N;
	DZK = r*AK+(1-r)*BA2B;
	DZN = r*AN+(1-r)*BB2P;
	DZP = r*AP+(1-r)*BA2N;

	EA = BAM+BAN-AA;
	EE = BEF+BEM-AE;
	EF = BFE+BFN-AF;
	EM = BMA+BME-AM;
	EN = BNA+BNF-AN;
	EAM = (BAN+BME)/2;
	EAN = (BAM+BNF)/2;
	EEF = (BEM+BFN)/2;
	EEM = (BEF+BMA)/2;
	EFN = (BFE+BNA)/2;
	EZA = r*AA+(1-r)*BE2F;
	EZE = r*AE+(1-r)*BA2N;
	EZF = r*AF+(1-r)*BA2M;
	EZM = r*AM+(1-r)*BF2N;
	EZN = r*AN+(1-r)*BE2M;

	FB = BBO+BBP-AB;
	FG = BGH+BGO-AG;
	FH = BHG+BHP-AH;
	FO = BOB+BOG-AO;
	FP = BPB+BPH-AP;
	FBO = (BBP+BOG)/2;
	FBP = (BBO+BPH)/2;
	FGH = (BGO+BHP)/2;
	FGO = (BGH+BOB)/2;
	FHP = (BHG+BPB)/2;
	FZB = r*AB+(1-r)*BG2H;
	FZG = r*AG+(1-r)*BB2P;
	FZH = r*AH+(1-r)*BB2O;
	FZO = r*AO+(1-r)*BH2P;
	FZP = r*AP+(1-r)*BG2O;

	GC = BCD+BCR-AC;
	GD = BDC+BDT-AD;
	GL = BLR+BLT-AL;
	GR = BRC+BRL-AR;
	GT = BTD+BTL-AT;
	GCD = (BCR+BDT)/2;
	GCR = (BCD+BRL)/2;
	GDT = (BDC+BTL)/2;
	GLR = (BLT+BRC)/2;
	GLT = (BLR+BTD)/2;
	GZ = (AC+AR+AL+AT+AD)/5;
	GZC = r*AC+(1-r)*BL2T;
	GZD = r*AD+(1-r)*BL2R;
	GZL = r*AL+(1-r)*BC2D;
	GZR = r*AR+(1-r)*BD2T;
	GZT = r*AT+(1-r)*BC2R;

	HC = BCD+BCQ-AC;
	HD = BDC+BDS-AD;
	HJ = BJQ+BJS-AJ;
	HQ = BQC+BQJ-AQ;
	HS = BSD+BSJ-AS;
	HCD = (BCQ+BDS)/2;
	HCQ = (BCD+BQJ)/2;
	HDS = (BDC+BSJ)/2;
	HJQ = (BJS+BQC)/2;
	HJS = (BJQ+BSD)/2;
	HZC = r*AC+(1-r)*BJ2S;
	HZD = r*AD+(1-r)*BJ2Q;
	HZJ = r*AJ+(1-r)*BC2D;
	HZQ = r*AQ+(1-r)*BD2S;
	HZS = r*AS+(1-r)*BC2Q;

	IC = BCQ+BCR-AC;
	IE = BEF+BEQ-AE;
	IF = BFE+BFR-AF;
	IQ = BQC+BQE-AQ;
	IR = BRC+BRF-AR;
	ICQ = (BCR+BQE)/2;
	ICR = (BCQ+BRF)/2;
	IEF = (BEQ+BFR)/2;
	IEQ = (BEF+BQC)/2;
	IFR = (BFE+BRC)/2;
	IZC = r*AC+(1-r)*BE2F;
	IZE = r*AE+(1-r)*BC2R;
	IZF = r*AF+(1-r)*BC2Q;
	IZQ = r*AQ+(1-r)*BF2R;
	IZR = r*AR+(1-r)*BE2Q;

	JD = BDS+BDT-AD;
	JG = BGH+BGS-AG;
	JH = BHG+BHT-AH;
	JS = BSD+BSG-AS;
	JT = BTD+BTH-AT;
	JDS = (BDT+BSG)/2;
	JDT = (BDS+BTH)/2;
	JGH = (BGS+BHT)/2;
	JGS = (BGH+BSD)/2;
	JHT = (BHG+BTD)/2;
	JZD = r*AD+(1-r)*BG2H;
	JZG = r*AG+(1-r)*BD2T;
	JZH = r*AH+(1-r)*BD2S;
	JZS = r*AS+(1-r)*BH2T;
	JZT = r*AT+(1-r)*BG2S;

	KE = BEM+BEQ-AE;
	KI = BIJ+BIM-AI;
	KJ = BJI+BJQ-AJ;
	KM = BME+BMI-AM;
	KQ = BQE+BQJ-AQ;
	KEM = (BEQ+BMI)/2;
	KEQ = (BEM+BQJ)/2;
	KIJ = (BIM+BJQ)/2;
	KIM = (BIJ+BME)/2;
	KJQ = (BJI+BQE)/2;
	KZE = r*AE+(1-r)*BI2J;
	KZI = r*AI+(1-r)*BE2Q;
	KZJ = r*AJ+(1-r)*BE2M;
	KZM = r*AM+(1-r)*BJ2Q;
	KZQ = r*AQ+(1-r)*BI2M;

	LF = BFN+BFR-AF;
	LK = BKL+BKN-AK;
	LL = BLK+BLR-AL;
	LN = BNF+BNK-AN;
	LR = BRF+BRL-AR;
	LFN = (BFR+BNK)/2;
	LFR = (BFN+BRL)/2;
	LKL = (BKN+BLR)/2;
	LKN = (BKL+BNF)/2;
	LLR = (BLK+BRF)/2;
	LZF = r*AF+(1-r)*BK2L;
	LZK = r*AK+(1-r)*BF2R;
	LZL = r*AL+(1-r)*BF2N;
	LZN = r*AN+(1-r)*BL2R;
	LZR = r*AR+(1-r)*BK2N;

	MG = BGO+BGS-AG;
	MI = BIJ+BIO-AI;
	MJ = BJI+BJS-AJ;
	MO = BOG+BOI-AO;
	MS = BSG+BSJ-AS;
	MGO = (BGS+BOI)/2;
	MGS = (BGO+BSJ)/2;
	MIJ = (BIO+BJS)/2;
	MIO = (BIJ+BOG)/2;
	MJS = (BJI+BSG)/2;
	MZG = r*AG+(1-r)*BI2J;
	MZI = r*AI+(1-r)*BG2S;
	MZJ = r*AJ+(1-r)*BG2O;
	MZO = r*AO+(1-r)*BJ2S;
	MZS = r*AS+(1-r)*BI2O;

	NH = BHP+BHT-AH;
	NK = BKL+BKP-AK;
	NL = BLK+BLT-AL;
	NP = BPH+BPK-AP;
	NT = BTH+BTL-AT;
	NHP = (BHT+BPK)/2;
	NHT = (BHP+BTL)/2;
	NKL = (BKP+BLT)/2;
	NKP = (BKL+BPH)/2;
	NLT = (BLK+BTH)/2;
	NZH = r*AH+(1-r)*BK2L;
	NZK = r*AK+(1-r)*BH2T;
	NZL = r*AL+(1-r)*BH2P;
	NZP = r*AP+(1-r)*BL2T;
	NZT = r*AT+(1-r)*BK2P;
}

void Megaminx4()
{
	init();
	transform3 p = rotate(one, -GZ);
	transform3 t = rotate(two, -GZ);

	//stick(AC--AR--AL--AT--AD, Grey);
	stick(AC--BCD--GC--BCR, Grey, t);
	stick(BCR--GC--GCR--BC2R, Grey, t);
	stick(BC2R--GCR--GR--BRC, Grey, t);
	stick(AR--BRC--GR--BRL, Grey, t);
	stick(BRL--GR--GLR--BL2R, Grey, t);
	stick(BL2R--GLR--GL--BLR, Grey, t);
	stick(AL--BLR--GL--BLT, Grey, t);
	stick(BLT--GL--GLT--BL2T, Grey, t);
	stick(BL2T--GLT--GT--BTL, Grey, t);
	stick(AT--BTD--GT--BTL, Grey, t);
	stick(BTD--GT--GDT--BD2T, Grey, t);
	stick(BD2T--GDT--GD--BDT, Grey, t);
	stick(AD--BDC--GD--BDT, Grey, t);
	stick(BCD--GC--GCD--BC2D, Grey, t);
	stick(BC2D--GCD--GD--BDC, Grey, t);
	stick(GC--GCD--GZC--GCR, Grey, t);
	stick(GR--GCR--GZR--GLR, Grey, t);
	stick(GL--GLR--GZL--GLT, Grey, t);
	stick(GT--GLT--GZT--GDT, Grey, t);
	stick(GD--GDT--GZD--GCD, Grey, t);
	polygon(GCR--GZC--GZR, Background, t);
	polygon(GLR--GZL--GZR, Background, t);
	polygon(GLT--GZL--GZT, Background, t);
	polygon(GDT--GZD--GZT, Background, t);
	polygon(GCD--GZC--GZD, Background, t);
	polygon(GZC--GZR--GZL--GZT--GZD, Background, t);

	//stick(AC--AQ--AJ--AS--AD, LightBlue);
	stick(AC--BCD--HC--BCQ, LightBlue, t);
	stick(BCQ--HC--HCQ--BC2Q, LightBlue, p);
	stick(BC2Q--HCQ--HQ--BQC, LightBlue);
	stick(AQ--BQC--HQ--BQJ, LightBlue);
	stick(BQJ--HQ--HJQ--BJ2Q, LightBlue);
	stick(BJ2Q--HJQ--HJ--BJQ, LightBlue);
	stick(AJ--BJQ--HJ--BJS, LightBlue);
	stick(BJS--HJ--HJS--BJ2S, LightBlue);
	stick(BJ2S--HJS--HS--BSJ, LightBlue);
	stick(AS--BSD--HS--BSJ, LightBlue);
	stick(BSD--HS--HDS--BD2S, LightBlue);
	stick(BD2S--HDS--HD--BDS, LightBlue, p);
	stick(AD--BDC--HD--BDS, LightBlue, t);
	stick(BCD--HC--HCD--BC2D, LightBlue, t);
	stick(BC2D--HCD--HD--BDC, LightBlue, t);
	stick(HC--HCD--HZC--HCQ, LightBlue, p);
	stick(HQ--HCQ--HZQ--HJQ, LightBlue);
	stick(HJ--HJQ--HZJ--HJS, LightBlue);
	stick(HS--HJS--HZS--HDS, LightBlue);
	stick(HD--HDS--HZD--HCD, LightBlue, p);
	polygon(HCQ--HZC--HZQ, Background);
	polygon(HJQ--HZJ--HZQ, Background);
	polygon(HJS--HZJ--HZS, Background);
	polygon(HDS--HZD--HZS, Background);
	polygon(HCD--HZC--HZD, Background, p);
	polygon(HZC--HZQ--HZJ--HZS--HZD, Background);

	//stick(AE--AQ--AC--AR--AF, Orange);
	stick(AE--BEF--IE--BEQ, Orange);
	stick(BEQ--IE--IEQ--BE2Q, Orange);
	stick(BE2Q--IEQ--IQ--BQE, Orange);
	stick(AQ--BQC--IQ--BQE, Orange);
	stick(BQC--IQ--ICQ--BC2Q, Orange);
	stick(BC2Q--ICQ--IC--BCQ, Orange, p);
	stick(AC--BCQ--IC--BCR, Orange, t);
	stick(BCR--IC--ICR--BC2R, Orange, t);
	stick(BC2R--ICR--IR--BRC, Orange, t);
	stick(AR--BRC--IR--BRF, Orange, t);
	stick(BRF--IR--IFR--BF2R, Orange, p);
	stick(BF2R--IFR--IF--BFR, Orange);
	stick(AF--BFE--IF--BFR, Orange);
	stick(BEF--IE--IEF--BE2F, Orange);
	stick(BE2F--IEF--IF--BFE, Orange);
	stick(IE--IEF--IZE--IEQ, Orange);
	stick(IQ--IEQ--IZQ--ICQ, Orange);
	stick(IC--ICQ--IZC--ICR, Orange, p);
	stick(IR--ICR--IZR--IFR, Orange, p);
	stick(IF--IFR--IZF--IEF, Orange);
	polygon(IEQ--IZE--IZQ, Background);
	polygon(ICQ--IZC--IZQ, Background);
	polygon(ICR--IZC--IZR, Background, p);
	polygon(IFR--IZF--IZR, Background);
	polygon(IEF--IZE--IZF, Background);
	polygon(IZE--IZQ--IZC--IZR--IZF, Background);

	//stick(AK--AN--AF--AR--AL, LightGreen);
	stick(AK--BKL--LK--BKN, LightGreen);
	stick(BKN--LK--LKN--BK2N, LightGreen);
	stick(BK2N--LKN--LN--BNK, LightGreen);
	stick(AN--BNF--LN--BNK, LightGreen);
	stick(BNF--LN--LFN--BF2N, LightGreen);
	stick(BF2N--LFN--LF--BFN, LightGreen);
	stick(AF--BFN--LF--BFR, LightGreen);
	stick(BFR--LF--LFR--BF2R, LightGreen);
	stick(BF2R--LFR--LR--BRF, LightGreen, p);
	stick(AR--BRF--LR--BRL, LightGreen, t);
	stick(BRL--LR--LLR--BL2R, LightGreen, t);
	stick(BL2R--LLR--LL--BLR, LightGreen, t);
	stick(AL--BLK--LL--BLR, LightGreen, t);
	stick(BKL--LK--LKL--BK2L, LightGreen);
	stick(BK2L--LKL--LL--BLK, LightGreen, p);
	stick(LK--LKL--LZK--LKN, LightGreen);
	stick(LN--LKN--LZN--LFN, LightGreen);
	stick(LF--LFN--LZF--LFR, LightGreen);
	stick(LR--LFR--LZR--LLR, LightGreen, p);
	stick(LL--LLR--LZL--LKL, LightGreen, p);
	polygon(LKN--LZK--LZN, Background);
	polygon(LFN--LZF--LZN, Background);
	polygon(LFR--LZF--LZR, Background);
	polygon(LLR--LZL--LZR, Background, p);
	polygon(LKL--LZK--LZL, Background);
	polygon(LZK--LZN--LZF--LZR--LZL, Background);

	//stick(AK--AP--AH--AT--AL, Pink);
	stick(AK--BKL--NK--BKP, Pink);
	stick(BKP--NK--NKP--BK2P, Pink);
	stick(BK2P--NKP--NP--BPK, Pink);
	stick(AP--BPH--NP--BPK, Pink);
	stick(BPH--NP--NHP--BH2P, Pink);
	stick(BH2P--NHP--NH--BHP, Pink);
	stick(AH--BHP--NH--BHT, Pink);
	stick(BHT--NH--NHT--BH2T, Pink);
	stick(BH2T--NHT--NT--BTH, Pink, p);
	stick(AT--BTH--NT--BTL, Pink, t);
	stick(BTL--NT--NLT--BL2T, Pink, t);
	stick(BL2T--NLT--NL--BLT, Pink, t);
	stick(AL--BLK--NL--BLT, Pink, t);
	stick(BKL--NK--NKL--BK2L, Pink);
	stick(BK2L--NKL--NL--BLK, Pink, p);
	stick(NK--NKL--NZK--NKP, Pink);
	stick(NP--NKP--NZP--NHP, Pink);
	stick(NH--NHP--NZH--NHT, Pink);
	stick(NT--NHT--NZT--NLT, Pink, p);
	stick(NL--NLT--NZL--NKL, Pink, p);
	polygon(NKP--NZK--NZP, Background);
	polygon(NHP--NZH--NZP, Background);
	polygon(NHT--NZH--NZT, Background);
	polygon(NLT--NZL--NZT, Background, p);
	polygon(NKL--NZK--NZL, Background);
	polygon(NZK--NZP--NZH--NZT--NZL, Background);

	//stick(AG--AS--AD--AT--AH, Lime);
	stick(AG--BGH--JG--BGS, Lime);
	stick(BGS--JG--JGS--BG2S, Lime);
	stick(BG2S--JGS--JS--BSG, Lime);
	stick(AS--BSD--JS--BSG, Lime);
	stick(BSD--JS--JDS--BD2S, Lime);
	stick(BD2S--JDS--JD--BDS, Lime, p);
	stick(AD--BDS--JD--BDT, Lime, t);
	stick(BDT--JD--JDT--BD2T, Lime, t);
	stick(BD2T--JDT--JT--BTD, Lime, t);
	stick(AT--BTD--JT--BTH, Lime, t);
	stick(BTH--JT--JHT--BH2T, Lime, p);
	stick(BH2T--JHT--JH--BHT, Lime);
	stick(AH--BHG--JH--BHT, Lime);
	stick(BGH--JG--JGH--BG2H, Lime);
	stick(BG2H--JGH--JH--BHG, Lime);
	stick(JG--JGH--JZG--JGS, Lime);
	stick(JS--JGS--JZS--JDS, Lime);
	stick(JD--JDS--JZD--JDT, Lime, p);
	stick(JT--JDT--JZT--JHT, Lime, p);
	stick(JH--JHT--JZH--JGH, Lime);
	polygon(JGS--JZG--JZS, Background);
	polygon(JDS--JZD--JZS, Background);
	polygon(JDT--JZD--JZT, Background, p);
	polygon(JHT--JZH--JZT, Background);
	polygon(JGH--JZG--JZH, Background);
	polygon(JZG--JZS--JZD--JZT--JZH, Background);

	//stick(AI--AO--AG--AS--AJ, Green);
	stick(AI--BIJ--MI--BIO, Green);
	stick(BIO--MI--MIO--BI2O, Green);
	stick(BI2O--MIO--MO--BOI, Green);
	stick(AO--BOG--MO--BOI, Green);
	stick(BOG--MO--MGO--BG2O, Green);
	stick(BG2O--MGO--MG--BGO, Green);
	stick(AG--BGO--MG--BGS, Green);
	stick(BGS--MG--MGS--BG2S, Green);
	stick(BG2S--MGS--MS--BSG, Green);
	stick(AS--BSG--MS--BSJ, Green);
	stick(BSJ--MS--MJS--BJ2S, Green);
	stick(BJ2S--MJS--MJ--BJS, Green);
	stick(AJ--BJI--MJ--BJS, Green);
	stick(BIJ--MI--MIJ--BI2J, Green);
	stick(BI2J--MIJ--MJ--BJI, Green);
	stick(MI--MIJ--MZI--MIO, Green);
	stick(MO--MIO--MZO--MGO, Green);
	stick(MG--MGO--MZG--MGS, Green);
	stick(MS--MGS--MZS--MJS, Green);
	stick(MJ--MJS--MZJ--MIJ, Green);
	polygon(MIO--MZI--MZO, Background);
	polygon(MGO--MZG--MZO, Background);
	polygon(MGS--MZG--MZS, Background);
	polygon(MJS--MZJ--MZS, Background);
	polygon(MIJ--MZI--MZJ, Background);
	polygon(MZI--MZO--MZG--MZS--MZJ, Background);

	//stick(AG--AO--AB--AP--AH, Red);
	stick(AG--BGH--FG--BGO, Red);
	stick(BGO--FG--FGO--BG2O, Red);
	stick(BG2O--FGO--FO--BOG, Red);
	stick(AO--BOB--FO--BOG, Red);
	stick(BOB--FO--FBO--BB2O, Red);
	stick(BB2O--FBO--FB--BBO, Red);
	stick(AB--BBO--FB--BBP, Red);
	stick(BBP--FB--FBP--BB2P, Red);
	stick(BB2P--FBP--FP--BPB, Red);
	stick(AP--BPB--FP--BPH, Red);
	stick(BPH--FP--FHP--BH2P, Red);
	stick(BH2P--FHP--FH--BHP, Red);
	stick(AH--BHG--FH--BHP, Red);
	stick(BGH--FG--FGH--BG2H, Red);
	stick(BG2H--FGH--FH--BHG, Red);
	stick(FG--FGH--FZG--FGO, Red);
	stick(FO--FGO--FZO--FBO, Red);
	stick(FB--FBO--FZB--FBP, Red);
	stick(FP--FBP--FZP--FHP, Red);
	stick(FH--FHP--FZH--FGH, Red);
	polygon(FGO--FZG--FZO, Background);
	polygon(FBO--FZB--FZO, Background);
	polygon(FBP--FZB--FZP, Background);
	polygon(FHP--FZH--FZP, Background);
	polygon(FGH--FZG--FZH, Background);
	polygon(FZG--FZO--FZB--FZP--FZH, Background);

	//stick(AB--AP--AK--AN--AA, Blue);
	stick(AB--BBA--DB--BBP, Blue);
	stick(BBP--DB--DBP--BB2P, Blue);
	stick(BB2P--DBP--DP--BPB, Blue);
	stick(AP--BPB--DP--BPK, Blue);
	stick(BPK--DP--DKP--BK2P, Blue);
	stick(BK2P--DKP--DK--BKP, Blue);
	stick(AK--BKN--DK--BKP, Blue);
	stick(BKN--DK--DKN--BK2N, Blue);
	stick(BK2N--DKN--DN--BNK, Blue);
	stick(AN--BNA--DN--BNK, Blue);
	stick(BNA--DN--DAN--BA2N, Blue);
	stick(BA2N--DAN--DA--BAN, Blue);
	stick(AA--BAB--DA--BAN, Blue);
	stick(BAB--DA--DAB--BA2B, Blue);
	stick(BA2B--DAB--DB--BBA, Blue);
	stick(DB--DAB--DZB--DBP, Blue);
	stick(DP--DBP--DZP--DKP, Blue);
	stick(DK--DKP--DZK--DKN, Blue);
	stick(DN--DKN--DZN--DAN, Blue);
	stick(DA--DAN--DZA--DAB, Blue);
	polygon(DBP--DZB--DZP, Background);
	polygon(DKP--DZK--DZP, Background);
	polygon(DKN--DZK--DZN, Background);
	polygon(DAN--DZA--DZN, Background);
	polygon(DAB--DZA--DZB, Background);
	polygon(DZB--DZP--DZK--DZN--DZA, Background);

	//stick(AE--AM--AA--AN--AF, Yellow);
	stick(AE--BEF--EE--BEM, Yellow);
	stick(BEM--EE--EEM--BE2M, Yellow);
	stick(BE2M--EEM--EM--BME, Yellow);
	stick(AM--BMA--EM--BME, Yellow);
	stick(BMA--EM--EAM--BA2M, Yellow);
	stick(BA2M--EAM--EA--BAM, Yellow);
	stick(AA--BAM--EA--BAN, Yellow);
	stick(BAN--EA--EAN--BA2N, Yellow);
	stick(BA2N--EAN--EN--BNA, Yellow);
	stick(AN--BNA--EN--BNF, Yellow);
	stick(BNF--EN--EFN--BF2N, Yellow);
	stick(BF2N--EFN--EF--BFN, Yellow);
	stick(AF--BFE--EF--BFN, Yellow);
	stick(BEF--EE--EEF--BE2F, Yellow);
	stick(BE2F--EEF--EF--BFE, Yellow);
	stick(EE--EEF--EZE--EEM, Yellow);
	stick(EM--EEM--EZM--EAM, Yellow);
	stick(EA--EAM--EZA--EAN, Yellow);
	stick(EN--EAN--EZN--EFN, Yellow);
	stick(EF--EFN--EZF--EEF, Yellow);
	polygon(EEM--EZE--EZM, Background);
	polygon(EAM--EZA--EZM, Background);
	polygon(EAN--EZA--EZN, Background);
	polygon(EFN--EZF--EZN, Background);
	polygon(EEF--EZE--EZF, Background);
	polygon(EZE--EZM--EZA--EZN--EZF, Background);

	//stick(AI--AM--AE--AQ--AJ, Violet);
	stick(AI--BIJ--KI--BIM, Violet);
	stick(BIM--KI--KIM--BI2M, Violet);
	stick(BI2M--KIM--KM--BMI, Violet);
	stick(AM--BME--KM--BMI, Violet);
	stick(BME--KM--KEM--BE2M, Violet);
	stick(BE2M--KEM--KE--BEM, Violet);
	stick(AE--BEM--KE--BEQ, Violet);
	stick(BEQ--KE--KEQ--BE2Q, Violet);
	stick(BE2Q--KEQ--KQ--BQE, Violet);
	stick(AQ--BQE--KQ--BQJ, Violet);
	stick(BQJ--KQ--KJQ--BJ2Q, Violet);
	stick(BJ2Q--KJQ--KJ--BJQ, Violet);
	stick(AJ--BJI--KJ--BJQ, Violet);
	stick(BIJ--KI--KIJ--BI2J, Violet);
	stick(BI2J--KIJ--KJ--BJI, Violet);
	stick(KI--KIJ--KZI--KIM, Violet);
	stick(KM--KIM--KZM--KEM, Violet);
	stick(KE--KEM--KZE--KEQ, Violet);
	stick(KQ--KEQ--KZQ--KJQ, Violet);
	stick(KJ--KJQ--KZJ--KIJ, Violet);
	polygon(KIM--KZI--KZM, Background);
	polygon(KEM--KZE--KZM, Background);
	polygon(KEQ--KZE--KZQ, Background);
	polygon(KJQ--KZJ--KZQ, Background);
	polygon(KIJ--KZI--KZJ, Background);
	polygon(KZI--KZM--KZE--KZQ--KZJ, Background);

	//stick(AB--AO--AI--AM--AA, White);
	stick(AB--BBA--CB--BBO, White);
	stick(BBO--CB--CBO--BB2O, White);
	stick(BB2O--CBO--CO--BOB, White);
	stick(AO--BOB--CO--BOI, White);
	stick(BOI--CO--CIO--BI2O, White);
	stick(BI2O--CIO--CI--BIO, White);
	stick(AI--BIM--CI--BIO, White);
	stick(BIM--CI--CIM--BI2M, White);
	stick(BI2M--CIM--CM--BMI, White);
	stick(AM--BMA--CM--BMI, White);
	stick(BMA--CM--CAM--BA2M, White);
	stick(BA2M--CAM--CA--BAM, White);
	stick(AA--BAB--CA--BAM, White);
	stick(BAB--CA--CAB--BA2B, White);
	stick(BA2B--CAB--CB--BBA, White);
	stick(CB--CAB--CZB--CBO, White);
	stick(CO--CBO--CZO--CIO, White);
	stick(CI--CIO--CZI--CIM, White);
	stick(CM--CIM--CZM--CAM, White);
	stick(CA--CAM--CZA--CAB, White);
	polygon(CBO--CZB--CZO, Background);
	polygon(CIO--CZO--CZI, Background);
	polygon(CIM--CZI--CZM, Background);
	polygon(CAM--CZM--CZA, Background);
	polygon(CAB--CZA--CZB, Background);
	polygon(CZB--CZO--CZI--CZM--CZA, Background);

	polygon(JHT--JZT--JZT+NHT-BH2T--JHT+NHT-BH2T, Background);
	polygon(BH2T--JHT--JHT+NHT-BH2T--NHT, Background);
	polygon(NHT--NZT--NZT+JHT-BH2T--JHT+NHT-BH2T, Background);
	polygon(NZT+JHT-BH2T--NZT--NZL--NZL+LKL-BK2L, Background);
	polygon(NKL--NZL--NZL+LKL-BK2L--NKL+LKL-BK2L, Background);
	polygon(BK2L--NKL--NKL+LKL-BK2L--LKL, Background);
	polygon(LKL--LZL--LZL+NKL-BK2L--NKL+LKL-BK2L, Background);
	polygon(LZL+NKL-BK2L--LZL--LZR--LZR+IFR-BF2R, Background);
	polygon(LFR--LZR--LZR+IFR-BF2R--IFR+LFR-BF2R, Background);
	polygon(BF2R--IFR--IFR+LFR-BF2R--LFR, Background);
	polygon(IFR--IZR--IZR+LFR-BF2R--IFR+LFR-BF2R, Background);
	polygon(IZR+LFR-BF2R--IZR--IZC--IZC+HCQ-BC2Q, Background);
	polygon(ICQ--IZC--IZC+HCQ-BC2Q--HCQ+ICQ-BC2Q, Background);
	polygon(BC2Q--HCQ--HCQ+ICQ-BC2Q--ICQ, Background);
	polygon(HCQ--HZC--HZC+ICQ-BC2Q--HCQ+ICQ-BC2Q, Background);
	polygon(HZC+ICQ-BC2Q--HZC--HZD--HZD+JDS-BD2S, Background);
	polygon(HDS--HZD--HZD+JDS-BD2S--HDS+JDS-BD2S, Background);
	polygon(BD2S--HDS--HDS+JDS-BD2S--JDS, Background);
	polygon(JDS--JZD--JZD+HDS-BD2S--HDS+JDS-BD2S, Background);
	polygon(JZD+HDS-BD2S--JZD--JZT--JZT+NHT-BH2T, Background);

	polygon(JHT--JZT--JZT+NHT-BH2T--JHT+NHT-BH2T, Background, p);
	polygon(BH2T--JHT--JHT+NHT-BH2T--NHT, Background, p);
	polygon(NHT--NZT--NZT+JHT-BH2T--JHT+NHT-BH2T, Background, p);
	polygon(NZT+JHT-BH2T--NZT--NZL--NZL+LKL-BK2L, Background, p);
	polygon(NKL--NZL--NZL+LKL-BK2L--NKL+LKL-BK2L, Background, p);
	polygon(BK2L--NKL--NKL+LKL-BK2L--LKL, Background, p);
	polygon(LKL--LZL--LZL+NKL-BK2L--NKL+LKL-BK2L, Background, p);
	polygon(LZL+NKL-BK2L--LZL--LZR--LZR+IFR-BF2R, Background, p);
	polygon(LFR--LZR--LZR+IFR-BF2R--IFR+LFR-BF2R, Background, p);
	polygon(BF2R--IFR--IFR+LFR-BF2R--LFR, Background, p);
	polygon(IFR--IZR--IZR+LFR-BF2R--IFR+LFR-BF2R, Background, p);
	polygon(IZR+LFR-BF2R--IZR--IZC--IZC+HCQ-BC2Q, Background, p);
	polygon(ICQ--IZC--IZC+HCQ-BC2Q--HCQ+ICQ-BC2Q, Background, p);
	polygon(BC2Q--HCQ--HCQ+ICQ-BC2Q--ICQ, Background, p);
	polygon(HCQ--HZC--HZC+ICQ-BC2Q--HCQ+ICQ-BC2Q, Background, p);
	polygon(HZC+ICQ-BC2Q--HZC--HZD--HZD+JDS-BD2S, Background, p);
	polygon(HDS--HZD--HZD+JDS-BD2S--HDS+JDS-BD2S, Background, p);
	polygon(BD2S--HDS--HDS+JDS-BD2S--JDS, Background, p);
	polygon(JDS--JZD--JZD+HDS-BD2S--HDS+JDS-BD2S, Background, p);
	polygon(JZD+HDS-BD2S--JZD--JZT--JZT+NHT-BH2T, Background, p);

	polygon(BCQ--BRF--BLK--BTH--BDS, Background, p);
	polygon(BCQ--BRF--BLK--BTH--BDS, Background, t);
}
