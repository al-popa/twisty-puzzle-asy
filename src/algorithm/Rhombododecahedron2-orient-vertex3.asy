include "algorithm.asyhdr";
include "../data/Rhombododecahedron2.dat";

figureBegin();
Rhombododecahedron2();
label("$\times 2$", 1.1*Z);
highline(HA--BD--GI--CD);
highline(HB--BC--GJ--FD);
highline(HA--AD--GA--BD);
highline(HB--AC--GA--BC);
makeChange(HA--AD--GA--BD, HA--BD--GI--CD, 0.55*(HA+BD));
makeChange(HA--AD--GE--CD, HA--AD--GA--BD, 0.55*(HA+AD));
makeChange(HA--BD--GI--CD, HA--AD--GE--CD, 0.55*(HA+CD));
makeChange(HB--AC--GA--BC, HB--BC--GJ--FD, 0.55*(HB+BC));
makeChange(HB--AC--GF--FD, HB--AC--GA--BC, 0.55*(HB+AC));
makeChange(HB--BC--GJ--FD, HB--AC--GF--FD, 0.55*(HB+FD));
figureLine();
Rhombododecahedron2();
makeMove(3*(-X-Y)/8, 180, 0.75);
label("$L$", 1.1*Z);
figureNext();
Rhombododecahedron2();
makeMove(3*(X-Y)/8, 180, 0.75);
label("$R$", 1.1*Z);
figureNext();
Rhombododecahedron2();
makeMove(3*(Z-Y)/8, 180, 0.75);
label("$U$", 1.1*Z);
figureLine();
Rhombododecahedron2();
makeMove(3*(-X-Y)/8, 180, 0.75);
label("$L$", 1.1*Z);
figureNext();
Rhombododecahedron2();
makeMove(3*(X-Y)/8, 180, 0.75);
label("$R$", 1.1*Z);
figureNext();
Rhombododecahedron2();
makeMove(3*(-Z-Y)/8, 180, 0.75);
label("$D$", 1.1*Z);
figureEnd();
